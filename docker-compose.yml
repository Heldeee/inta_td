version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173" # Port for Vite dev server
    environment:
      - VITE_API_URL=http://backend:3000
      - VITE_KEYCLOAK_URL=http://keycloak:8080
      - VITE_KEYCLOAK_REALM=medical-cabinet
      - VITE_KEYCLOAK_CLIENT_ID=medical-frontend
    depends_on:
      - keycloak
    volumes:
      - ./src:/app/src # Enables hot-reload in dev mode

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3000:3000" # Backend API server port
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/medical_cabinet
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=medical-cabinet
      - KEYCLOAK_CLIENT_ID=medical-backend
    depends_on:
      - mongodb
      - keycloak

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=medical_cabinet
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d/
    command: [ "--auth", "--logpath", "/var/log/mongodb/mongo.log", "--logappend" ]

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_REALM_IMPORT=/opt/keycloak/data/import/realm-medical.json
    ports:
      - "8180:8080"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
      - ./keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf
    command: [ "start-dev", "--import-realm" ]
    depends_on:
      - postgres
    logging:
      driver: "none"

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres_data:
